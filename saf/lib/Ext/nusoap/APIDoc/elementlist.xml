<?xml version="1.0"?><phpdoc><index><chapter char="s"><element type="class" source="" sourcetype="class" name="soap_parser">soap_parser class parses SOAP XML messages</element><element type="functions" source="soap_parser" sourcetype="class" name="soap_parser">constructor</element><element type="functions" source="soap_parser" sourcetype="class" name="start_element">start-element handler</element><element type="functions" source="wsdl" sourcetype="class" name="start_element">start-element handler</element><element type="class" source="" sourcetype="class" name="soap_server">soap_server allows the user to create a SOAP server</element><element type="functions" source="soap_server" sourcetype="class" name="soap_server">constructor</element><element type="functions" source="soap_server" sourcetype="class" name="service">processes request and returns response</element><element type="functions" source="wsdl" sourcetype="class" name="serialize">serialize the parsed wsdl</element><element type="functions" source="soap_fault" sourcetype="class" name="serialize">serialize a fault</element><element type="functions" source="soapval" sourcetype="class" name="serialize">return serialized value</element><element type="functions" source="wsdl" sourcetype="class" name="serializeRPCParameters">serialize a PHP value according to a WSDL message definition</element><element type="functions" source="wsdl" sourcetype="class" name="serializeType">serializes a PHP value according a given type definition</element><element type="functions" source="XMLSchema" sourcetype="class" name="schemaStartElement">start-element handler</element><element type="functions" source="XMLSchema" sourcetype="class" name="schemaEndElement">end-element handler</element><element type="functions" source="XMLSchema" sourcetype="class" name="schemaCharacterData">element content handler</element><element type="functions" source="XMLSchema" sourcetype="class" name="serializeSchema">serialize the schema</element><element type="functions" source="XMLSchema" sourcetype="class" name="serializeTypeDef">returns a sample serialization of a given type, or false if no type by the given name</element><element type="class" source="" sourcetype="class" name="soapclient">soapclient higher level class for easy usage.</element><element type="functions" source="soapclient" sourcetype="class" name="soapclient">constructor</element><element type="functions" source="soapclient" sourcetype="class" name="send">send the SOAP message</element><element type="functions" source="soap_transport_http" sourcetype="class" name="send">send the SOAP message via HTTP 1.0</element><element type="functions" source="soapclient" sourcetype="class" name="setHeaders">set the SOAP headers</element><element type="functions" source="soapclient" sourcetype="class" name="setHTTPProxy">set proxy info here</element><element type="functions" source="soapclient" sourcetype="class" name="setCredentials">if authenticating, set user credentials here</element><element type="functions" source="soap_transport_http" sourcetype="class" name="setCredentials">if authenticating, set user credentials here</element><element type="class" source="" sourcetype="class" name="soap_fault">soap_fault class, allows for creation of faults</element><element type="functions" source="soap_fault" sourcetype="class" name="soap_fault">constructor</element><element type="class" source="" sourcetype="class" name="soap_transport_http">transport class for sending/receiving data via HTTP and HTTPS</element><element type="functions" source="soap_transport_http" sourcetype="class" name="soap_transport_http">constructor</element><element type="functions" source="soap_transport_http" sourcetype="class" name="setSOAPAction">set the soapaction value</element><element type="functions" source="soap_transport_http" sourcetype="class" name="setProxy">set proxy info here</element><element type="functions" source="soap_transport_http" sourcetype="class" name="sendHTTPS">send the SOAP message via HTTPS 1.0 using CURL</element><element type="class" source="" sourcetype="class" name="soapval">for creating serializable abstractions of native PHP types</element><element type="functions" source="soapval" sourcetype="class" name="soapval">constructor</element><element type="functions" source="nusoap_base" sourcetype="class" name="setError">sets error string</element><element type="functions" source="nusoap_base" sourcetype="class" name="serialize_val">serializes PHP values in accordance w/ section 5</element><element type="functions" source="nusoap_base" sourcetype="class" name="serializeEnvelope">serialize message</element><element type="variables" source="nusoap_base" sourcetype="class" name="$soap_defencoding">set default encoding</element></chapter><chapter char="e"><element type="functions" source="soap_parser" sourcetype="class" name="end_element">end-element handler</element><element type="functions" source="wsdl" sourcetype="class" name="end_element">end-element handler</element><element type="functions" source="XMLSchema" sourcetype="class" name="expandQname">expands a qualified name</element><element type="variables" source="soapclient" sourcetype="class" name="$endpoint"/><element type="variables" source="soapclient" sourcetype="class" name="$error_str"/><element type="variables" source="nusoap_base" sourcetype="class" name="$error_str"/></chapter><chapter char="c"><element type="functions" source="soap_parser" sourcetype="class" name="character_data">element content handler</element><element type="functions" source="wsdl" sourcetype="class" name="character_data">element content handler</element><element type="functions" source="soap_server" sourcetype="class" name="configureWSDL">sets up wsdl object</element><element type="variables" source="soap_server" sourcetype="class" name="$charset_encoding"/><element type="functions" source="soapclient" sourcetype="class" name="call">calls method, returns PHP native type</element><element type="uses" source="soapclient" sourcetype="class" name="class.soap_transport_http.php"/><element type="variables" source="nusoap_base" sourcetype="class" name="$charencoding"/></chapter><chapter char="g"><element type="functions" source="soap_parser" sourcetype="class" name="get_response">get the parsed message</element><element type="functions" source="soap_parser" sourcetype="class" name="getHeaders">get the parsed headers</element><element type="functions" source="soapclient" sourcetype="class" name="getHeaders">get the response headers</element><element type="functions" source="wsdl" sourcetype="class" name="getOperations">returns an assoc array of operation names =&amp;gt; operation data</element><element type="functions" source="wsdl" sourcetype="class" name="getOperationData">returns an associative array of data necessary for calling an operation</element><element type="functions" source="soapclient" sourcetype="class" name="getOperationData">get available data pertaining to an operation</element><element type="functions" source="wsdl" sourcetype="class" name="getBindingData"/><element type="functions" source="wsdl" sourcetype="class" name="getMessageData"/><element type="functions" source="XMLSchema" sourcetype="class" name="getPHPType">get the PHP type of a user defined type in the schema</element><element type="functions" source="XMLSchema" sourcetype="class" name="getLocalPart">returns the local part of a prefixed string</element><element type="functions" source="XMLSchema" sourcetype="class" name="getPrefix">returns the prefix part of a prefixed string</element><element type="functions" source="XMLSchema" sourcetype="class" name="getNamespaceFromPrefix">pass it a prefix, it returns a namespace</element><element type="functions" source="XMLSchema" sourcetype="class" name="getPrefixFromNamespace">returns the prefix for a given namespace</element><element type="functions" source="XMLSchema" sourcetype="class" name="getTypeDef">returns an array of information about a given type</element><element type="functions" source="soapclient" sourcetype="class" name="getProxy">dynamically creates proxy class, allowing user to directly call methods from wsdl</element><element type="functions" source="nusoap_base" sourcetype="class" name="getError">returns error string if present</element></chapter><chapter char="d"><element type="functions" source="soap_parser" sourcetype="class" name="decode_entities">decodes entities</element><element type="functions" source="soapval" sourcetype="class" name="decode">decodes a soapval object into a PHP native type</element><element type="functions" source="nusoap_base" sourcetype="class" name="debug">adds debug data to the class level debug string</element></chapter><chapter char="b"><element type="functions" source="soap_parser" sourcetype="class" name="buildVal">builds response structures for compound values (arrays/structs)</element><element type="functions" source="soap_parser" sourcetype="class" name="buildSoapVal">for building SOAP header values</element><element type="functions" source="soap_server" sourcetype="class" name="b_writeIt"/></chapter><chapter char="p"><element type="functions" source="soap_server" sourcetype="class" name="parse_request">parses request and posts response</element><element type="functions" source="soap_server" sourcetype="class" name="popup"/><element type="functions" source="soap_server" sourcetype="class" name="popout"/><element type="functions" source="wsdl" sourcetype="class" name="parseWSDL">parses the wsdl document</element><element type="functions" source="XMLSchema" sourcetype="class" name="parseFile">parse an XML file</element><element type="functions" source="XMLSchema" sourcetype="class" name="parseString">parse an XML string</element><element type="functions" source="soapclient" sourcetype="class" name="parseResponse">processes SOAP message returned from server</element><element type="variables" source="soapclient" sourcetype="class" name="$password"/><element type="variables" source="soap_transport_http" sourcetype="class" name="$password"/><element type="variables" source="soapclient" sourcetype="class" name="$portName"/></chapter><chapter char="v"><element type="functions" source="soap_server" sourcetype="class" name="verify_method">takes the soapval object that was created by parsing the request</element><element type="variables" source="nusoap_base" sourcetype="class" name="$version"/></chapter><chapter char="a"><element type="functions" source="soap_server" sourcetype="class" name="add_to_map">add a method to the dispatch map</element></chapter><chapter char="r"><element type="functions" source="soap_server" sourcetype="class" name="register">register a service with the server</element><element type="variables" source="soap_server" sourcetype="class" name="$responseHeaders"/><element type="variables" source="soapclient" sourcetype="class" name="$responseHeaders"/><element type="variables" source="soap_server" sourcetype="class" name="$request"/><element type="variables" source="soap_server" sourcetype="class" name="$result"/><element type="variables" source="soapclient" sourcetype="class" name="$requestHeaders"/></chapter><chapter char="f"><element type="functions" source="soap_server" sourcetype="class" name="fault">create a fault. this also acts as a flag to the server that a fault has occured.</element><element type="variables" source="soap_server" sourcetype="class" name="$fault"/><element type="variables" source="soapclient" sourcetype="class" name="$fault">fault related variables</element><element type="variables" source="soap_fault" sourcetype="class" name="$faultcode"/><element type="variables" source="soap_fault" sourcetype="class" name="$faultactor"/><element type="variables" source="soap_fault" sourcetype="class" name="$faultstring"/><element type="variables" source="soap_fault" sourcetype="class" name="$faultdetail"/><element type="functions" source="nusoap_base" sourcetype="class" name="formatDump"/></chapter><chapter char="w"><element type="functions" source="soap_server" sourcetype="class" name="webDescription">prints html description of services</element><element type="class" source="" sourcetype="class" name="wsdl">parses a WSDL file, allows access to it&amp;apos;s data, other utility methods</element><element type="functions" source="wsdl" sourcetype="class" name="wsdl">constructor</element></chapter><chapter char="l"><element type="functions" source="soap_server" sourcetype="class" name="lib_bwcheck"/></chapter><chapter char="m"><element type="functions" source="soap_server" sourcetype="class" name="makeObj"/></chapter><chapter char="o"><element type="variables" source="soap_server" sourcetype="class" name="$operations"/></chapter><chapter char="h"><element type="variables" source="soap_server" sourcetype="class" name="$headers"/></chapter><chapter char="X"><element type="class" source="" sourcetype="class" name="XMLSchema">parses an XML Schema, allows access to it&amp;apos;s data, other utility methods</element><element type="functions" source="XMLSchema" sourcetype="class" name="XMLSchema">constructor</element></chapter><chapter char="x"><element type="functions" source="XMLSchema" sourcetype="class" name="xdebug">adds debug data to the clas level debug string</element><element type="variables" source="nusoap_base" sourcetype="class" name="$xmlEntities">entities to convert</element></chapter><chapter char="t"><element type="functions" source="XMLSchema" sourcetype="class" name="typeToForm">returns HTML form elements that allow a user</element><element type="functions" source="nusoap_base" sourcetype="class" name="timestamp_to_iso8601">convert unix timestamp to ISO 8601 compliant date string</element><element type="variables" source="nusoap_base" sourcetype="class" name="$typemap">load types into typemap array</element><element type="variables" source="nusoap_base" sourcetype="class" name="$title"/></chapter><chapter char="u"><element type="variables" source="soapclient" sourcetype="class" name="$username"/><element type="variables" source="soap_transport_http" sourcetype="class" name="$username"/><element type="variables" source="soap_transport_http" sourcetype="class" name="$url"/></chapter><chapter char="n"><element type="class" source="" sourcetype="class" name="nusoap_base">nusoap_base</element><element type="functions" source="nusoap_base" sourcetype="class" name="nusoap_base">constructor: loads schema version</element><element type="variables" source="nusoap_base" sourcetype="class" name="$namespaces">load namespace uris into an array of uri =&amp;gt; prefix</element></chapter><chapter char="i"><element type="functions" source="nusoap_base" sourcetype="class" name="iso8601_to_timestamp">convert ISO 8601 compliant date string to unix timestamp</element></chapter><chapter char="N"><element type="package" source="" sourcetype="" name="No Package specified"/></chapter></index></phpdoc>